<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="OneSecTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>